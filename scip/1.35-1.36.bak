#lang sicp
(define wucha 0.000001)
(define (enough? a b)
  (< (abs (- a b)) wucha))

(define (fixed-point f guess)
  (define count 0)
  (define (try guess)
    (let ( (next (f guess))
          )
      (display guess)
      (set! count (+ 1 count))
      (newline)
      (display count)
      (newline)
      (if (enough?  guess next)
             next
             (try  next))))
  (try guess))
(define (gold-div)
  (fixed-point (lambda (x) (+ 1 (/ 1 x))) 1.0))
(define (ex1.36)
  (fixed-point (lambda (x) (/ (log 1000) (log x))) 2))
(define (ex1.36zuni)
  (fixed-point (lambda (x) (* (/ 1 2) (+ x (/ (log 1000) (log x))))) 2)) 